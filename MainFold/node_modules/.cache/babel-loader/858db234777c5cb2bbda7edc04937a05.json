{"ast":null,"code":"var _jsxFileName = \"D:\\\\Messaging app\\\\Messaging-app\\\\Mainfold\\\\src\\\\comp\\\\MessangerCom\\\\NewconversationModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Modal, Form } from \"react-bootstrap\";\nimport { Button } from \"reactstrap\";\nimport \"./SideBar.css\";\nimport { useContacts } from \"./Context/ContactsProvider\";\nimport { useConversations } from \"./Context/ConversationsProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NewConversationModal = ({\n  closeModal\n}) => {\n  _s();\n\n  const [selectedContactEmails, setSelectedContactsEmails] = useState([]);\n  const {\n    contacts\n  } = useContacts();\n  const {\n    createConversation\n  } = useConversations();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    createConversation(selectedContactEmails);\n    closeModal();\n  }\n\n  function handleCheckboxChange(contactEmail) {\n    setSelectedContactsEmails(prevSelectedContactEmails => {\n      if (prevSelectedContactEmails.includes(contactEmail)) {\n        return prevSelectedContactEmails.filter(prevEmail => {\n          return contactEmail === prevEmail;\n        });\n      } else {\n        return [...prevSelectedContactEmails, contactEmail];\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      className: \"cardStyle\",\n      closeButton: true,\n      children: \"Create Conversation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      className: \"box2\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [contacts.map(contact => /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlemail: contact.Email,\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            className: \"txt\",\n            type: \"checkbox\",\n            value: selectedContactEmails.includes(contact.Email),\n            label: contact.Name,\n            onChange: () => handleCheckboxChange(contact.Email)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)\n        }, contact.Email, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(Button, {\n          outline: true,\n          color: \"secondary\",\n          className: \"mt-2\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NewConversationModal, \"TuWeWWZRYkfQlxG+byYeNe+BqXo=\", false, function () {\n  return [useContacts, useConversations];\n});\n\n_c = NewConversationModal;\nexport default NewConversationModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewConversationModal\");","map":{"version":3,"sources":["D:/Messaging app/Messaging-app/Mainfold/src/comp/MessangerCom/NewconversationModal.js"],"names":["React","useState","Modal","Form","Button","useContacts","useConversations","NewConversationModal","closeModal","selectedContactEmails","setSelectedContactsEmails","contacts","createConversation","handleSubmit","e","preventDefault","handleCheckboxChange","contactEmail","prevSelectedContactEmails","includes","filter","prevEmail","map","contact","Email","Name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,IAAhB,QAA4B,iBAA5B;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,OAAO,eAAP;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,gBAAT,QAAiC,iCAAjC;;;;AACA,MAAMC,oBAAoB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AAAA;;AAC/C,QAAM,CAACC,qBAAD,EAAwBC,yBAAxB,IAAqDT,QAAQ,CAAC,EAAD,CAAnE;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAeN,WAAW,EAAhC;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAyBN,gBAAgB,EAA/C;;AACA,WAASO,YAAT,CAAsBC,CAAtB,EAAyB;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,kBAAkB,CAACH,qBAAD,CAAlB;AACAD,IAAAA,UAAU;AACX;;AACD,WAASQ,oBAAT,CAA8BC,YAA9B,EAA4C;AAC1CP,IAAAA,yBAAyB,CAAEQ,yBAAD,IAA+B;AACvD,UAAIA,yBAAyB,CAACC,QAA1B,CAAmCF,YAAnC,CAAJ,EAAsD;AACpD,eAAOC,yBAAyB,CAACE,MAA1B,CAAkCC,SAAD,IAAe;AACrD,iBAAOJ,YAAY,KAAKI,SAAxB;AACD,SAFM,CAAP;AAGD,OAJD,MAIO;AACL,eAAO,CAAC,GAAGH,yBAAJ,EAA+BD,YAA/B,CAAP;AACD;AACF,KARwB,CAAzB;AASD;;AACD,sBACE;AAAA,4BACE,QAAC,KAAD,CAAO,MAAP;AAAc,MAAA,SAAS,EAAC,WAAxB;AAAoC,MAAA,WAAW,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,KAAD,CAAO,IAAP;AAAY,MAAA,SAAS,EAAC,MAAtB;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEJ,YAAhB;AAAA,mBACGF,QAAQ,CAACW,GAAT,CAAcC,OAAD,iBACZ,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,YAAY,EAAEA,OAAO,CAACC,KAAlC;AAAA,iCACE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAE,KAAvB;AACE,YAAA,IAAI,EAAC,UADP;AAEE,YAAA,KAAK,EAAEf,qBAAqB,CAACU,QAAtB,CAA+BI,OAAO,CAACC,KAAvC,CAFT;AAGE,YAAA,KAAK,EAAED,OAAO,CAACE,IAHjB;AAIE,YAAA,QAAQ,EAAE,MAAMT,oBAAoB,CAACO,OAAO,CAACC,KAAT;AAJtC;AAAA;AAAA;AAAA;AAAA;AADF,WAA8CD,OAAO,CAACC,KAAtD;AAAA;AAAA;AAAA;AAAA,gBADD,CADH,eAWE,QAAC,MAAD;AACE,UAAA,OAAO,MADT;AAEE,UAAA,KAAK,EAAC,WAFR;AAGE,UAAA,SAAS,EAAC,MAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AA6BD,CAjDD;;GAAMjB,oB;UAEiBF,W,EACUC,gB;;;KAH3BC,oB;AAmDN,eAAeA,oBAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Modal, Form } from \"react-bootstrap\";\r\nimport { Button } from \"reactstrap\";\r\nimport \"./SideBar.css\";\r\nimport { useContacts } from \"./Context/ContactsProvider\";\r\nimport { useConversations } from \"./Context/ConversationsProvider\";\r\nconst NewConversationModal = ({ closeModal }) => {\r\n  const [selectedContactEmails, setSelectedContactsEmails] = useState([]);\r\n  const { contacts } = useContacts();\r\n  const { createConversation } = useConversations();\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    createConversation(selectedContactEmails);\r\n    closeModal();\r\n  }\r\n  function handleCheckboxChange(contactEmail) {\r\n    setSelectedContactsEmails((prevSelectedContactEmails) => {\r\n      if (prevSelectedContactEmails.includes(contactEmail)) {\r\n        return prevSelectedContactEmails.filter((prevEmail) => {\r\n          return contactEmail === prevEmail;\r\n        });\r\n      } else {\r\n        return [...prevSelectedContactEmails, contactEmail];\r\n      }\r\n    });\r\n  }\r\n  return (\r\n    <>\r\n      <Modal.Header className=\"cardStyle\" closeButton>\r\n        Create Conversation\r\n      </Modal.Header>\r\n      <Modal.Body className=\"box2\">\r\n        <Form onSubmit={handleSubmit}>\r\n          {contacts.map((contact) => (\r\n            <Form.Group controlemail={contact.Email} key={contact.Email}>\r\n              <Form.Check className =\"txt\"\r\n                type=\"checkbox\"\r\n                value={selectedContactEmails.includes(contact.Email)}\r\n                label={contact.Name}\r\n                onChange={() => handleCheckboxChange(contact.Email)}\r\n              />\r\n            </Form.Group>\r\n          ))}\r\n          <Button\r\n            outline\r\n            color=\"secondary\"\r\n            className=\"mt-2\"\r\n            \r\n          >\r\n            Create\r\n          </Button>\r\n        </Form>\r\n      </Modal.Body>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewConversationModal;\r\n"]},"metadata":{},"sourceType":"module"}