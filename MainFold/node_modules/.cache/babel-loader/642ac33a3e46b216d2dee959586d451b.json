{"ast":null,"code":"var _jsxFileName = \"D:\\\\Messaging app\\\\Messaging-app\\\\MainFold\\\\src\\\\comp\\\\MessangerCom\\\\MainConversation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport \"./SideBar.css\";\nimport { Form, InputGroup } from \"react-bootstrap\";\nimport { Button } from \"reactstrap\";\nimport { useConversations } from \"./Context/ConversationsProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MainConversation = () => {\n  _s();\n\n  const [text, setText] = useState(\"\");\n  const lastMessageRef = useRef();\n  const {\n    sendMessage,\n    selectedConversation\n  } = useConversations();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    sendMessage(selectedConversation.recipients.map(r => r.Email), text);\n    setText('');\n  }\n\n  useEffect();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bckgrnd\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-column flex-grow-1\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-grow-1 overflow-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-column align-item-start justify-content-end px-3\",\n          children: selectedConversation.messages.map((message, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `my-1 d-flex flex-column ${message.fromMe ? 'align-self-end align-items-end' : 'align-items-start'}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `rounded px-2 py-1 ${message.fromMe ? 'bg-secondary text-white' : 'border'}`,\n                children: message.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `text-muted small ${message.fromMe ? 'text-right' : ''}`,\n                children: message.fromMe ? 'You' : message.senderName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 14\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 12\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"m-2\",\n          children: /*#__PURE__*/_jsxDEV(InputGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              required: true,\n              value: text,\n              onChange: e => setText(e.target.value),\n              style: {\n                height: \"38px\",\n                resize: \"none\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"input-group-append height:100% \",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                color: \"secondary\",\n                type: \"submit\",\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MainConversation, \"OZIGc6u//vctCT+T5oI0XBbQV7Y=\", false, function () {\n  return [useConversations];\n});\n\n_c = MainConversation;\nexport default MainConversation;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainConversation\");","map":{"version":3,"sources":["D:/Messaging app/Messaging-app/MainFold/src/comp/MessangerCom/MainConversation.js"],"names":["React","useState","useRef","useEffect","Form","InputGroup","Button","useConversations","MainConversation","text","setText","lastMessageRef","sendMessage","selectedConversation","handleSubmit","e","preventDefault","recipients","map","r","Email","messages","message","index","fromMe","senderName","target","value","height","resize"],"mappings":"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","sourcesContent":["import React, { useState,useRef,useEffect} from \"react\";\r\nimport \"./SideBar.css\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Button } from \"reactstrap\";\r\nimport { useConversations } from \"./Context/ConversationsProvider\";\r\n\r\nconst MainConversation = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const lastMessageRef = useRef()\r\n  const { sendMessage, selectedConversation } = useConversations();\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    sendMessage(\r\n      selectedConversation.recipients.map(r => r.Email),\r\n      text\r\n    );\r\n    setText('');\r\n  }\r\n  useEffect()\r\n  return (\r\n    <div className=\"bckgrnd\">\r\n       <div className=\"d-flex flex-column flex-grow-1\">\r\n   \r\n   <div className=\"flex-grow-1 overflow-auto\">\r\n     <div className=\"d-flex flex-column align-item-start justify-content-end px-3\">\r\n       {selectedConversation.messages.map((message, index) => {\r\n         return (\r\n           <div\r\n             key={index}\r\n             className={`my-1 d-flex flex-column ${\r\n               message.fromMe ? 'align-self-end align-items-end' : 'align-items-start'\r\n             }`}\r\n           >\r\n              <div\r\n               className={`rounded px-2 py-1 ${message.fromMe ? 'bg-secondary text-white' : 'border'}`}>\r\n               {message.text}\r\n             </div>\r\n             <div\r\n               className={`text-muted small ${\r\n                 message.fromMe ? 'text-right' : ''\r\n               }`}\r\n             >\r\n               {message.fromMe ? 'You' : message.senderName}\r\n             </div>\r\n           </div>\r\n         );\r\n       })}\r\n     </div>\r\n     </div>\r\n     </div>\r\n      <div>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group className=\"m-2\">\r\n            <InputGroup>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                required\r\n                value={text}\r\n                onChange={(e) => setText(e.target.value)}\r\n                style={{ height: \"38px\", resize: \"none\" }}\r\n              ></Form.Control>\r\n              <span className=\"input-group-append height:100% \">\r\n                <Button color=\"secondary\" type=\"submit\">\r\n                  Send\r\n                </Button>\r\n              </span>\r\n            </InputGroup>\r\n          </Form.Group>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default MainConversation;\r\n"]},"metadata":{},"sourceType":"module"}