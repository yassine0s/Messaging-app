{"ast":null,"code":"var _jsxFileName = \"D:\\\\Messaging app\\\\Messaging-app\\\\MainFold\\\\src\\\\comp\\\\MessangerCom\\\\NewContactModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { Modal, Form } from \"react-bootstrap\";\nimport { Button, Input } from \"reactstrap\";\nimport Axios from \"axios\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { toast } from \"react-toastify\";\nimport \"./SideBar.css\";\nimport { useContacts } from './Contextt/ContactsProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NewContactModal = ({\n  closeModal\n}) => {\n  _s();\n\n  const EmailRef = useRef();\n  const NameRef = useRef();\n  const [Email, setEmail] = useState(\"\");\n  const [Name, setName] = useState(\"\");\n  const {\n    createContact\n  } = useContacts();\n\n  const handleSubmit = () => {\n    Axios.post(\"http://localhost:3001/NewContact\", {\n      Email: Email,\n      Name: Name\n    }).then(response => {\n      if (response.data.message) {\n        toast.error(\"Cannot find user\", {\n          position: toast.POSITION.BOTTOM_CENTER,\n          autoClose: false\n        });\n      } else {\n        createContact(EmailRef.current.value, NameRef.current.value);\n        closeModal();\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      className: \"cardStyle\",\n      closeButton: true,\n      children: \"Create Contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      className: \"box\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: \"txt\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            ref: EmailRef,\n            required: true,\n            onChange: e => {\n              setEmail(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            className: \"txt\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            ref: NameRef,\n            required: true,\n            onChange: e => {\n              setName(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          outline: true,\n          color: \"secondary\",\n          className: \"mt-2\",\n          onClick: handleSubmit,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NewContactModal, \"k3hJZ+KsCQi37sZW9qEgzjaobLA=\", false, function () {\n  return [useContacts];\n});\n\n_c = NewContactModal;\nexport default NewContactModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewContactModal\");","map":{"version":3,"sources":["D:/Messaging app/Messaging-app/MainFold/src/comp/MessangerCom/NewContactModal.js"],"names":["React","useRef","useState","Modal","Form","Button","Input","Axios","toast","useContacts","NewContactModal","closeModal","EmailRef","NameRef","Email","setEmail","Name","setName","createContact","handleSubmit","post","then","response","data","message","error","position","POSITION","BOTTOM_CENTER","autoClose","current","value","e","target"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport { Modal, Form } from \"react-bootstrap\";\r\nimport { Button, Input } from \"reactstrap\";\r\nimport Axios from \"axios\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"./SideBar.css\";\r\nimport {useContacts} from './Contextt/ContactsProvider'\r\nconst NewContactModal = ({ closeModal }) => {\r\n  const EmailRef = useRef();\r\n  const NameRef = useRef();\r\n  const [Email, setEmail] = useState(\"\");\r\n  const [Name, setName] = useState(\"\");\r\nconst {createContact}= useContacts();\r\n  const handleSubmit = () => {\r\n    Axios.post(\"http://localhost:3001/NewContact\", {\r\n      Email: Email,\r\n      Name: Name,\r\n    }).then((response) => {\r\n      if (response.data.message) {\r\n        toast.error(\"Cannot find user\", {\r\n          position: toast.POSITION.BOTTOM_CENTER,\r\n          autoClose: false,\r\n        });\r\n      } else {\r\n         createContact(EmailRef.current.value,NameRef.current.value)\r\n        closeModal();\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal.Header className=\"cardStyle\" closeButton>\r\n        Create Contact\r\n      </Modal.Header>\r\n      <Modal.Body className=\"box\">\r\n        <Form>\r\n          <Form.Group>\r\n            <Form.Label className=\"txt\">Email</Form.Label>\r\n            <Input\r\n              type=\"text\"\r\n              ref={EmailRef}\r\n              required\r\n              onChange={(e) => {\r\n                setEmail(e.target.value);\r\n              }}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label className=\"txt\">Name</Form.Label>\r\n            <Input\r\n              type=\"text\"\r\n              ref={NameRef}\r\n              required\r\n              onChange={(e) => {\r\n                setName(e.target.value);\r\n              }}\r\n            />\r\n          </Form.Group>\r\n          <Button\r\n            outline\r\n            color=\"secondary\"\r\n            className=\"mt-2\"\r\n            onClick={handleSubmit}\r\n          >\r\n            Create\r\n          </Button>\r\n        </Form>\r\n      </Modal.Body>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewContactModal;\r\n"]},"metadata":{},"sourceType":"module"}