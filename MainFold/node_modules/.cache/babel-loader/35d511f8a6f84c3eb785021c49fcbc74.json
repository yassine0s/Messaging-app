{"ast":null,"code":"var _s = $RefreshSig$();\n\n//store hooks in here so that when we refresh the page the data will be saved\nimport { useEffect, useState } from \"react\";\nconst PREFIX = \"messaging-app\"; //when apps are in the same localhost this makes the app unique\n\nexport default function useLocalStorage(key, initialValue) {\n  _s();\n\n  const prefixkey = PREFIX + key;\n  const [value, setValue] = useState(() => {\n    const jasonvalue = localStorage.getItem(prefixkey);\n    if (jasonvalue = null) return JSON.parse(jasonvalue);\n\n    if (typeof initialValue == \"function\") {\n      return initialValue();\n    } else {\n      return initialValue;\n    }\n  });\n  useEffect(() => {\n    localStorage.setItem(prefixkey, JSON.stringify(value));\n  }, [prefixkey, value]);\n  return [value, setValue];\n}\n\n_s(useLocalStorage, \"yGKfv8YIpLxp2LcHyuveKOkakdA=\");","map":{"version":3,"sources":["D:/Messaging app/Messaging-app/MainFold/src/comp/UseLocalStorage.js"],"names":["useEffect","useState","PREFIX","useLocalStorage","key","initialValue","prefixkey","value","setValue","jasonvalue","localStorage","getItem","JSON","parse","setItem","stringify"],"mappings":";;AAAA;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,MAAMC,MAAM,GAAG,eAAf,C,CAAgC;;AAChC,eAAe,SAASC,eAAT,CAAyBC,GAAzB,EAA8BC,YAA9B,EAA4C;AAAA;;AACzD,QAAMC,SAAS,GAAGJ,MAAM,GAAGE,GAA3B;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,MAAM;AACvC,UAAMQ,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqBL,SAArB,CAAnB;AACA,QAAKG,UAAU,GAAG,IAAlB,EAAyB,OAAOG,IAAI,CAACC,KAAL,CAAWJ,UAAX,CAAP;;AACzB,QAAI,OAAOJ,YAAP,IAAuB,UAA3B,EAAuC;AACrC,aAAOA,YAAY,EAAnB;AACD,KAFD,MAEO;AACL,aAAOA,YAAP;AACD;AACF,GARiC,CAAlC;AASAL,EAAAA,SAAS,CAAC,MAAI;AAACU,IAAAA,YAAY,CAACI,OAAb,CAAqBR,SAArB,EAA+BM,IAAI,CAACG,SAAL,CAAeR,KAAf,CAA/B;AAAsD,GAA5D,EAA6D,CAACD,SAAD,EAAWC,KAAX,CAA7D,CAAT;AACA,SAAO,CAACA,KAAD,EAAOC,QAAP,CAAP;AACD;;GAbuBL,e","sourcesContent":["//store hooks in here so that when we refresh the page the data will be saved\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst PREFIX = \"messaging-app\"; //when apps are in the same localhost this makes the app unique\r\nexport default function useLocalStorage(key, initialValue) {\r\n  const prefixkey = PREFIX + key;\r\n  const [value, setValue] = useState(() => {\r\n    const jasonvalue = localStorage.getItem(prefixkey);\r\n    if ((jasonvalue = null)) return JSON.parse(jasonvalue);\r\n    if (typeof initialValue == \"function\") {\r\n      return initialValue();\r\n    } else {\r\n      return initialValue;\r\n    }\r\n  });\r\n  useEffect(()=>{localStorage.setItem(prefixkey,JSON.stringify(value))},[prefixkey,value])\r\n  return [value,setValue]\r\n}\r\n"]},"metadata":{},"sourceType":"module"}