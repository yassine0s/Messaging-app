{"ast":null,"code":"var _jsxFileName = \"D:\\\\Messaging app\\\\Messaging-app\\\\MainFold\\\\src\\\\comp\\\\MessangerCom\\\\MainConversation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect, useCallback } from \"react\";\nimport \"./SideBar.css\";\nimport { Form, InputGroup } from \"react-bootstrap\";\nimport { Button } from \"reactstrap\";\nimport { useConversations } from \"./Context/ConversationsProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MainConversation = () => {\n  _s();\n\n  const [text, setText] = useState(\"\");\n  const lastMessageRef = useRef();\n  const setRef = useCallback(node => {\n    node.scrollIntoView({\n      smooth: true\n    });\n  });\n  const {\n    sendMessage,\n    selectedConversation\n  } = useConversations();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    sendMessage(selectedConversation.recipients.map(r => r.Email), text);\n    setText(\"\");\n  }\n\n  useEffect(() => {\n    if (lastMessageRef.current) {\n      lastMessageRef.current.scrollIntoView({\n        smooth: true\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bckgrnd\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-column flex-grow-1\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-grow-1 overflow-auto\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-column align-item-start justify-content-end px-3\",\n          children: selectedConversation.messages.map((message, index) => {\n            const lastMessage = selectedConversation.messages.length - 1 === index;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: lastMessage ? lastMessageRef : null,\n              className: `my-1 d-flex flex-column ${message.fromMe ? \"align-self-end align-items-end\" : \"align-items-start\"}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: `rounded px-2 py-1 ${message.fromMe ? \"bg-secondary text-white\" : 'border'}`,\n                children: message.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `text-muted small ${message.fromMe ? \"text-right\" : \"\"}`,\n                children: message.fromMe ? \"You\" : message.senderName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"m-2\",\n          children: /*#__PURE__*/_jsxDEV(InputGroup, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              required: true,\n              value: text,\n              onChange: e => setText(e.target.value),\n              style: {\n                height: \"38px\",\n                resize: \"none\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"input-group-append height:100% \",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                color: \"secondary\",\n                type: \"submit\",\n                children: \"Send\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MainConversation, \"ekyDw1CerNZ/Vey5qUGLs52erjc=\", false, function () {\n  return [useConversations];\n});\n\n_c = MainConversation;\nexport default MainConversation;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainConversation\");","map":{"version":3,"sources":["D:/Messaging app/Messaging-app/MainFold/src/comp/MessangerCom/MainConversation.js"],"names":["React","useState","useRef","useEffect","useCallback","Form","InputGroup","Button","useConversations","MainConversation","text","setText","lastMessageRef","setRef","node","scrollIntoView","smooth","sendMessage","selectedConversation","handleSubmit","e","preventDefault","recipients","map","r","Email","current","messages","message","index","lastMessage","length","fromMe","senderName","target","value","height","resize"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect,useCallback } from \"react\";\r\nimport \"./SideBar.css\";\r\nimport { Form, InputGroup } from \"react-bootstrap\";\r\nimport { Button } from \"reactstrap\";\r\nimport { useConversations } from \"./Context/ConversationsProvider\";\r\n\r\nconst MainConversation = () => {\r\n  const [text, setText] = useState(\"\");\r\n  const lastMessageRef = useRef()\r\n  const setRef = useCallback(node =>{node.scrollIntoView({smooth : true})})\r\n  const { sendMessage, selectedConversation } = useConversations();\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    sendMessage(\r\n      selectedConversation.recipients.map((r) => r.Email),\r\n      text\r\n    );\r\n    setText(\"\");\r\n  }\r\n  useEffect(() => {\r\n    if (lastMessageRef.current) {\r\n      lastMessageRef.current.scrollIntoView({ smooth: true });\r\n    }\r\n  });\r\n  return (\r\n    <div className=\"bckgrnd\">\r\n      <div className=\"d-flex flex-column flex-grow-1\">\r\n        <div className=\"flex-grow-1 overflow-auto\">\r\n          <div className=\"d-flex flex-column align-item-start justify-content-end px-3\">\r\n            {selectedConversation.messages.map((message, index) => {\r\n              const lastMessage =\r\n                selectedConversation.messages.length - 1 === index;\r\n              return (\r\n                <div\r\n                  ref={lastMessage ? lastMessageRef : null}\r\n                  key={index}\r\n                  className={`my-1 d-flex flex-column ${\r\n                    message.fromMe\r\n                      ? \"align-self-end align-items-end\"\r\n                      : \"align-items-start\"\r\n                  }`}\r\n                >\r\n                  <div\r\n                    className={`rounded px-2 py-1 ${\r\n                      message.fromMe ? \"bg-secondary text-white\" : 'border'\r\n                    }`}\r\n                  >\r\n                    {message.text}\r\n                  </div>\r\n                  <div\r\n                    className={`text-muted small ${\r\n                      message.fromMe ? \"text-right\" : \"\"\r\n                    }`}\r\n                  >\r\n                    {message.fromMe ? \"You\" : message.senderName}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group className=\"m-2\">\r\n            <InputGroup>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                required\r\n                value={text}\r\n                onChange={(e) => setText(e.target.value)}\r\n                style={{ height: \"38px\", resize: \"none\" }}\r\n              ></Form.Control>\r\n              <span className=\"input-group-append height:100% \">\r\n                <Button color=\"secondary\" type=\"submit\">\r\n                  Send\r\n                </Button>\r\n              </span>\r\n            </InputGroup>\r\n          </Form.Group>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default MainConversation;\r\n"]},"metadata":{},"sourceType":"module"}