{"ast":null,"code":"var _jsxFileName = \"D:\\\\Messaging app\\\\Messaging-app\\\\MainFold\\\\src\\\\comp\\\\MessangerCom\\\\NewContactModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useRef, useState } from \"react\";\nimport { Modal, Form } from \"react-bootstrap\";\nimport { Button } from \"reactstrap\";\nimport Axios from \"axios\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst NewContactModal = ({\n  closeModal\n}) => {\n  _s();\n\n  const EmailRef = useRef();\n  const NameRef = useRef();\n  const [Email, setEmail] = useState(\"\");\n  const [Name, setName] = useState(\"\");\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    Axios.post(\"http://localhost:3001/NewContact\", {\n      Email: Email,\n      Name: Name\n    }).then(response => {\n      if (response.data.message) {\n        toast.error(\"Wrong Email or Password\", {\n          position: toast.POSITION.BOTTOM_CENTER,\n          autoClose: false\n        });\n      } else {\n        history.push({\n          pathname: \"/Main_Page\",\n          state: {\n            detail: Email\n          }\n        });\n      }\n    }); // createContact(EmailRef.current.value,nameRef.current.value)\n\n    closeModal();\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: \"Create Contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            ref: EmailRef,\n            required: true,\n            onChange: e => {\n              setEmail(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            ref: NameRef,\n            required: true,\n            onChange: e => {\n              setName(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          outline: true,\n          color: \"secondary\",\n          className: \"mt-2\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(NewContactModal, \"0SCe1TsyIEaE6sVbc+BeFgFAtTY=\");\n\n_c = NewContactModal;\nexport default NewContactModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewContactModal\");","map":{"version":3,"sources":["D:/Messaging app/Messaging-app/MainFold/src/comp/MessangerCom/NewContactModal.js"],"names":["React","createContext","useRef","useState","Modal","Form","Button","Axios","NewContactModal","closeModal","EmailRef","NameRef","Email","setEmail","Name","setName","handleSubmit","e","preventDefault","post","then","response","data","message","toast","error","position","POSITION","BOTTOM_CENTER","autoClose","history","push","pathname","state","detail","target","value"],"mappings":"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","sourcesContent":["import React, { createContext, useRef,useState } from \"react\";\r\nimport { Modal, Form } from \"react-bootstrap\";\r\nimport {Button } from \"reactstrap\";\r\nimport Axios from \"axios\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst NewContactModal = ({ closeModal }) => {\r\n  const EmailRef = useRef();\r\n  const NameRef = useRef();\r\n  const [Email, setEmail] = useState(\"\");\r\n  const [Name, setName] = useState(\"\");\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    Axios.post(\"http://localhost:3001/NewContact\", {\r\n      Email: Email,\r\n      Name: Name,\r\n    }).then((response) => {\r\n      if (response.data.message) {\r\n        toast.error(\"Wrong Email or Password\", {\r\n          position: toast.POSITION.BOTTOM_CENTER,\r\n          autoClose: false,\r\n        });\r\n      } else {\r\n        history.push({\r\n          pathname: \"/Main_Page\",\r\n          state: { detail: Email },\r\n        });\r\n      }\r\n    });\r\n    \r\n   // createContact(EmailRef.current.value,nameRef.current.value)\r\n    closeModal()\r\n  }\r\n  return (\r\n    <>\r\n      <Modal.Header closeButton>Create Contact</Modal.Header>\r\n      <Modal.Body>\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group>\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control type=\"text\" ref={EmailRef} required  onChange={(e) => {\r\n            setEmail(e.target.value);\r\n          }}/>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control type=\"text\" ref={NameRef} required onChange={(e) => {\r\n            setName(e.target.value);\r\n          }} />\r\n          </Form.Group>\r\n          <Button outline color=\"secondary\" className=\"mt-2\">Create</Button>\r\n        </Form>\r\n      </Modal.Body>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewContactModal;\r\n"]},"metadata":{},"sourceType":"module"}