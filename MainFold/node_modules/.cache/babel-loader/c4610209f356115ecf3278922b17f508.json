{"ast":null,"code":"var _jsxFileName = \"D:\\\\Messaging app\\\\Messaging-app\\\\MainFold\\\\src\\\\comp\\\\MessangerCom\\\\SideBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Tab, Nav, Modal } from \"react-bootstrap\";\nimport \"./SideBar.css\";\nimport \"./popup.css\";\nimport Conversation from \"./Conversation\";\nimport Contacts from \"./Contacts\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport \"antd/dist/antd.css\";\nimport { Button } from \"reactstrap\";\nimport NewContactModal from \"./NewContactModal\";\nimport NewConversationModal from \"./NewconversationModal\";\nimport Settings from \"./Settings\";\nimport MyPhoto from \"./img/avatar.jpg\";\nimport ReactRoundedImage from \"react-rounded-image\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Conversation_Key = \"Conversation\";\nconst Contact_Key = \"Contacts\";\n\nconst SideBar = ({\n  Email\n}) => {\n  _s();\n\n  const [activeKey, setActiveKey] = useState(Conversation_Key);\n  const conversationOpen = activeKey === Conversation_Key;\n  const [modalOpen, setModalOpen] = useState(false);\n\n  function closeModal() {\n    setModalOpen(false);\n  }\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const togglePopup = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            className: \" SideBar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: togglePopup,\n              children: [/*#__PURE__*/_jsxDEV(ReactRoundedImage, {\n                roundedSize: \"4\",\n                imageWidth: \"43\",\n                imageHeight: \"43\",\n                image: MyPhoto,\n                children: [\" \", isOpen && /*#__PURE__*/_jsxDEV(Settings, {\n                  content: /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                      children: \"Design your Popup\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 54,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"Lorem ipsum dolortate velit ecia deserunt mollit anim id est laborum.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 55,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      children: \"Test button\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 59,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true),\n                  handleClose: togglePopup\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 15\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            className: \" SideBar\",\n            style: {\n              color: \"black\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Your Email: \", Email, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Navb\",\n      children: [/*#__PURE__*/_jsxDEV(Tab.Container, {\n        activeKey: activeKey,\n        onSelect: setActiveKey,\n        children: [/*#__PURE__*/_jsxDEV(Nav, {\n          variant: \"tabs\",\n          className: \"justify-content-center\",\n          children: [/*#__PURE__*/_jsxDEV(Nav.Item, {\n            className: \"SideBar\",\n            children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n              eventKey: Conversation_Key,\n              className: \"SideBar\",\n              children: \"Converstation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n            className: \"SideBar\",\n            children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n              eventKey: Contact_Key,\n              className: \"SideBar\",\n              children: \"Contacts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab.Content, {\n          className: \"border\",\n          children: [/*#__PURE__*/_jsxDEV(Tab.Pane, {\n            eventKey: Conversation_Key,\n            children: /*#__PURE__*/_jsxDEV(Conversation, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tab.Pane, {\n            eventKey: Contact_Key,\n            children: /*#__PURE__*/_jsxDEV(Contacts, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          outline: true,\n          color: \"secondary\",\n          onClick: () => setModalOpen(true),\n          children: [\"New \", conversationOpen ? \"conversation\" : \"Contact\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: modalOpen,\n        onHide: closeModal,\n        children: conversationOpen ? /*#__PURE__*/_jsxDEV(NewConversationModal, {\n          closeModal: closeModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(NewContactModal, {\n          closeModal: closeModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SideBar, \"+W9utym/dwwJ7bSi3i5VNvnU2Xo=\");\n\n_c = SideBar;\nexport default SideBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SideBar\");","map":{"version":3,"sources":["D:/Messaging app/Messaging-app/MainFold/src/comp/MessangerCom/SideBar.js"],"names":["React","useState","Tab","Nav","Modal","Conversation","Contacts","Container","Row","Col","Button","NewContactModal","NewConversationModal","Settings","MyPhoto","ReactRoundedImage","Conversation_Key","Contact_Key","SideBar","Email","activeKey","setActiveKey","conversationOpen","modalOpen","setModalOpen","closeModal","isOpen","setIsOpen","togglePopup","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Tab, Nav, Modal } from \"react-bootstrap\";\r\nimport \"./SideBar.css\";\r\nimport \"./popup.css\";\r\n\r\nimport Conversation from \"./Conversation\";\r\nimport Contacts from \"./Contacts\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Button } from \"reactstrap\";\r\nimport NewContactModal from \"./NewContactModal\";\r\nimport NewConversationModal from \"./NewconversationModal\";\r\nimport Settings from \"./Settings\";\r\nimport MyPhoto from \"./img/avatar.jpg\";\r\nimport ReactRoundedImage from \"react-rounded-image\";\r\n\r\nconst Conversation_Key = \"Conversation\";\r\nconst Contact_Key = \"Contacts\";\r\n\r\nconst SideBar = ({ Email }) => {\r\n  const [activeKey, setActiveKey] = useState(Conversation_Key);\r\n  const conversationOpen = activeKey === Conversation_Key;\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  function closeModal() {\r\n    setModalOpen(false);\r\n  }\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const togglePopup = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Container>\r\n          <Row>\r\n            <Col className=\" SideBar\">\r\n            <div onClick={togglePopup}>\r\n\r\n              <ReactRoundedImage\r\n                roundedSize=\"4\"\r\n                imageWidth=\"43\"\r\n                imageHeight=\"43\"\r\n                image={MyPhoto}\r\n              >\r\n                {\" \"}\r\n                {isOpen && (\r\n                  <Settings\r\n                    content={\r\n                      <>\r\n                        <b>Design your Popup</b>\r\n                        <p>\r\n                          Lorem ipsum dolortate velit ecia deserunt mollit anim\r\n                          id est laborum.\r\n                        </p>\r\n                        <button>Test button</button>\r\n                      </>\r\n                    }\r\n                    handleClose={togglePopup}\r\n                  />\r\n                )}\r\n              </ReactRoundedImage>{\" \"}\r\n              </div>\r\n            </Col>\r\n            <Col className=\" SideBar\" style={{ color: \"black\" }}>\r\n              <span>Your Email: {Email} </span>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n\r\n      <div className=\"Navb\">\r\n        <Tab.Container activeKey={activeKey} onSelect={setActiveKey}>\r\n          <Nav variant=\"tabs\" className=\"justify-content-center\">\r\n            <Nav.Item className=\"SideBar\">\r\n              <Nav.Link eventKey={Conversation_Key} className=\"SideBar\">\r\n                Converstation\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item className=\"SideBar\">\r\n              <Nav.Link eventKey={Contact_Key} className=\"SideBar\">\r\n                Contacts\r\n              </Nav.Link>\r\n            </Nav.Item>\r\n          </Nav>\r\n          <Tab.Content className=\"border\">\r\n            <Tab.Pane eventKey={Conversation_Key}>\r\n              <Conversation />\r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey={Contact_Key}>\r\n              <Contacts />\r\n            </Tab.Pane>\r\n          </Tab.Content>\r\n          <Button outline color=\"secondary\" onClick={() => setModalOpen(true)}>\r\n            New {conversationOpen ? \"conversation\" : \"Contact\"}{\" \"}\r\n          </Button>\r\n        </Tab.Container>\r\n        <Modal show={modalOpen} onHide={closeModal}>\r\n          {conversationOpen ? (\r\n            <NewConversationModal closeModal={closeModal} />\r\n          ) : (\r\n            <NewContactModal closeModal={closeModal} />\r\n          )}\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBar;\r\n"]},"metadata":{},"sourceType":"module"}